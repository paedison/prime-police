# Generated by Django 5.2 on 2025-07-08 01:35

import a_official.models.abstract_models
import a_official.models.choices
import a_official.models.official_models
import django.db.models.deletion
import django.db.models.functions.comparison
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('a_official', '0003_alter_problem_year'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=a_official.models.choices.year_choice, default=a_official.models.choices.default_year, verbose_name='연도')),
                ('exam', models.CharField(choices=a_official.models.choices.exam_choice, default='리트', max_length=2, verbose_name='시험')),
                ('is_active', models.BooleanField(default=False, verbose_name='활성')),
            ],
        ),
        migrations.CreateModel(
            name='PredictAnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(4)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='predict_answer_count', to='a_official.problem')),
            ],
            options={
                'verbose_name': '[합격예측] 04_답안 개수',
                'verbose_name_plural': '[합격예측] 04_답안 개수',
                'db_table': 'a_official_predict_answer_count',
            },
        ),
        migrations.CreateModel(
            name='PredictAnswerCountLowRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(4)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='predict_answer_count_low_rank', to='a_official.problem')),
            ],
            options={
                'verbose_name': '[합격예측] 11_답안 개수(하위권)',
                'verbose_name_plural': '[합격예측] 11_답안 개수(하위권)',
                'db_table': 'a_official_predict_answer_count_low_rank',
            },
        ),
        migrations.CreateModel(
            name='PredictAnswerCountMidRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(4)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='predict_answer_count_mid_rank', to='a_official.problem')),
            ],
            options={
                'verbose_name': '[합격예측] 10_답안 개수(중위권)',
                'verbose_name_plural': '[합격예측] 10_답안 개수(중위권)',
                'db_table': 'a_official_predict_answer_count_mid_rank',
            },
        ),
        migrations.CreateModel(
            name='PredictAnswerCountTopRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4'))), then=models.Value(4)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='predict_answer_count_top_rank', to='a_official.problem')),
            ],
            options={
                'verbose_name': '[합격예측] 09_답안 개수(상위권)',
                'verbose_name_plural': '[합격예측] 09_답안 개수(상위권)',
                'db_table': 'a_official_predict_answer_count_top_rank',
            },
        ),
        migrations.CreateModel(
            name='PredictExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='활성')),
                ('page_opened_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='페이지 오픈 일시')),
                ('exam_started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='시험 시작 일시')),
                ('exam_finished_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='시험 종료 일시')),
                ('answer_predict_opened_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='예상 정답 공개 일시')),
                ('answer_official_opened_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='공식 정답 공개 일시')),
                ('predict_closed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='합격 에측 종료 일시')),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='predict_exam', to='a_official.exam')),
            ],
            options={
                'verbose_name': '[합격예측] 00_LEET',
                'verbose_name_plural': '[합격예측] 00_LEET',
                'db_table': 'a_official_predict_official',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PredictStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_0', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='형사법')),
                ('subject_1', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='헌법')),
                ('subject_2', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='경찰학')),
                ('subject_3', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='범죄학')),
                ('subject_4', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='민법총칙')),
                ('subject_5', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='행정법')),
                ('subject_6', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='행정학')),
                ('sum', models.JSONField(default=a_official.models.abstract_models.get_default_statistics, verbose_name='총점')),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='predict_statistics', to='a_official.exam', verbose_name='시험')),
            ],
            options={
                'verbose_name': '[합격예측] 01_시험통계',
                'verbose_name_plural': '[합격예측] 01_시험통계',
                'db_table': 'a_official_predict_statistics',
            },
        ),
        migrations.CreateModel(
            name='PredictStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('serial', models.CharField(max_length=10, verbose_name='수험번호')),
                ('name', models.CharField(max_length=20, verbose_name='이름')),
                ('password', models.CharField(blank=True, max_length=10, null=True, verbose_name='비밀번호')),
                ('selection', models.CharField(choices=a_official.models.choices.selection_choice, max_length=2, verbose_name='선택과목')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predict_students', to='a_official.exam', verbose_name='시험')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='official_predict_students', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '[합격예측] 02_수험정보',
                'verbose_name_plural': '[합격예측] 02_수험정보',
                'db_table': 'a_official_predict_student',
            },
        ),
        migrations.CreateModel(
            name='PredictScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_0', models.FloatField(blank=True, null=True, verbose_name='형사법')),
                ('subject_1', models.FloatField(blank=True, null=True, verbose_name='한법')),
                ('subject_2', models.FloatField(blank=True, null=True, verbose_name='경찰학')),
                ('subject_3', models.FloatField(blank=True, null=True, verbose_name='범죄학')),
                ('subject_4', models.FloatField(blank=True, null=True, verbose_name='민법총칙')),
                ('subject_5', models.FloatField(blank=True, null=True, verbose_name='행정법')),
                ('subject_6', models.FloatField(blank=True, null=True, verbose_name='행정학')),
                ('sum', models.FloatField(blank=True, null=True, verbose_name='총점 표준점수')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='a_official.predictstudent')),
            ],
            options={
                'verbose_name': '[합격예측] 05_점수',
                'verbose_name_plural': '[합격예측] 05_점수',
                'db_table': 'a_official_predict_score',
            },
        ),
        migrations.CreateModel(
            name='PredictRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_0', models.IntegerField(blank=True, null=True, verbose_name='형사법')),
                ('subject_1', models.IntegerField(blank=True, null=True, verbose_name='헌법')),
                ('subject_2', models.IntegerField(blank=True, null=True, verbose_name='경찰학')),
                ('subject_3', models.IntegerField(blank=True, null=True, verbose_name='범죄학')),
                ('subject_4', models.IntegerField(blank=True, null=True, verbose_name='민법총칙')),
                ('subject_5', models.IntegerField(blank=True, null=True, verbose_name='행정법')),
                ('subject_6', models.IntegerField(blank=True, null=True, verbose_name='행정학')),
                ('sum', models.IntegerField(blank=True, null=True, verbose_name='총점')),
                ('participants', models.IntegerField(blank=True, null=True, verbose_name='총 인원')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rank', to='a_official.predictstudent')),
            ],
            options={
                'verbose_name': '[합격예측] 06_등수(전체)',
                'verbose_name_plural': '[합격예측] 06_등수(전체)',
                'db_table': 'a_official_predict_rank',
            },
        ),
        migrations.CreateModel(
            name='PredictAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성 일시')),
                ('answer', models.IntegerField(choices=a_official.models.choices.answer_choice, default=1, verbose_name='답안')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predict_answers', to='a_official.problem')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='a_official.predictstudent')),
            ],
            options={
                'verbose_name': '[합격예측] 03_답안',
                'verbose_name_plural': '[합격예측] 03_답안',
                'db_table': 'a_official_predict_answer',
            },
        ),
        migrations.AddConstraint(
            model_name='predictstudent',
            constraint=models.UniqueConstraint(fields=('exam', 'serial'), name='unique_official_predict_student'),
        ),
        migrations.AddConstraint(
            model_name='predictanswer',
            constraint=models.UniqueConstraint(fields=('student', 'problem'), name='unique_official_predict_answer'),
        ),
    ]
