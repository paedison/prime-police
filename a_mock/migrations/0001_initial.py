# Generated by Django 5.2 on 2025-06-26 09:03

import a_mock.models.abstract_models
import ckeditor_uploader.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=a_mock.models.abstract_models.year_choice, default=a_mock.models.abstract_models.get_next_year, verbose_name='연도')),
                ('page_opened_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='페이지 오픈 일시')),
                ('exam_started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='시험 시작 일시')),
                ('exam_finished_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='시험 종료 일시')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': '[문제은행] 00_시험',
                'verbose_name_plural': '[문제은행] 00_시험',
                'constraints': [models.UniqueConstraint(fields=('year',), name='unique_mock_exam')],
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=a_mock.models.abstract_models.subject_choice, default='형사', max_length=2, verbose_name='과목')),
                ('number', models.IntegerField(choices=a_mock.models.abstract_models.number_choice, default=1, verbose_name='문제 번호')),
                ('answer', models.IntegerField(choices=a_mock.models.abstract_models.answer_choice, default=1, verbose_name='정답')),
                ('question', models.TextField(default='', verbose_name='발문')),
                ('data', ckeditor_uploader.fields.RichTextUploadingField(default='', verbose_name='문제 내용')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='a_mock.exam')),
            ],
            options={
                'verbose_name': '[문제은행] 01_문제',
                'verbose_name_plural': '[문제은행] 01_문제',
                'ordering': ['-exam', 'id'],
            },
        ),
        migrations.CreateModel(
            name='AnswerCountTopRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.IntegerField(default=1, verbose_name='예상정답')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer_count_top_rank', to='a_mock.problem')),
            ],
            options={
                'verbose_name': '[모의고사] 07_답안 개수(상위권)',
                'verbose_name_plural': '[모의고사] 07_답안 개수(상위권)',
                'db_table': 'a_mock_answer_count_top_rank',
            },
        ),
        migrations.CreateModel(
            name='AnswerCountMidRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.IntegerField(default=1, verbose_name='예상정답')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer_count_mid_rank', to='a_mock.problem')),
            ],
            options={
                'verbose_name': '[모의고사] 08_답안 개수(중위권)',
                'verbose_name_plural': '[모의고사] 08_답안 개수(중위권)',
                'db_table': 'a_mock_answer_count_mid_rank',
            },
        ),
        migrations.CreateModel(
            name='AnswerCountLowRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.IntegerField(default=1, verbose_name='예상정답')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer_count_low_rank', to='a_mock.problem')),
            ],
            options={
                'verbose_name': '[모의고사] 09_답안 개수(하위권)',
                'verbose_name_plural': '[모의고사] 09_답안 개수(하위권)',
                'db_table': 'a_mock_answer_count_low_rank',
            },
        ),
        migrations.CreateModel(
            name='AnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.IntegerField(default=1, verbose_name='예상정답')),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer_count', to='a_mock.problem', verbose_name='문제')),
            ],
            options={
                'verbose_name': '[모의고사] 04_답안 개수',
                'verbose_name_plural': '[모의고사] 04_답안 개수',
                'db_table': 'a_mock_answer_count',
            },
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_0', models.JSONField(default=a_mock.models.abstract_models.get_default_statistics, verbose_name='형사법')),
                ('subject_1', models.JSONField(default=a_mock.models.abstract_models.get_default_statistics, verbose_name='헌법')),
                ('subject_2', models.JSONField(default=a_mock.models.abstract_models.get_default_statistics, verbose_name='경찰학')),
                ('subject_3', models.JSONField(default=a_mock.models.abstract_models.get_default_statistics, verbose_name='범죄학')),
                ('subject_4', models.JSONField(default=a_mock.models.abstract_models.get_default_statistics, verbose_name='민법총칙')),
                ('sum', models.JSONField(default=a_mock.models.abstract_models.get_default_statistics, verbose_name='총점')),
                ('exam', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='a_mock.exam', verbose_name='시험')),
            ],
            options={
                'verbose_name': '[모의고사] 00_시험통계',
                'verbose_name_plural': '[모의고사] 00_시험통계',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('name', models.CharField(max_length=20, verbose_name='이름')),
                ('serial', models.CharField(max_length=10, verbose_name='수험번호')),
                ('password', models.CharField(blank=True, max_length=10, null=True, verbose_name='비밀번호')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='a_mock.exam', verbose_name='시험')),
            ],
            options={
                'verbose_name': '[모의고사] 01_수험정보',
                'verbose_name_plural': '[모의고사] 01_수험정보',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_0', models.FloatField(blank=True, null=True, verbose_name='형사법')),
                ('subject_1', models.FloatField(blank=True, null=True, verbose_name='한법')),
                ('subject_2', models.FloatField(blank=True, null=True, verbose_name='경찰학')),
                ('subject_3', models.FloatField(blank=True, null=True, verbose_name='범죄학')),
                ('subject_4', models.FloatField(blank=True, null=True, verbose_name='민법총칙')),
                ('sum', models.FloatField(blank=True, null=True, verbose_name='총점')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='a_mock.student', verbose_name='학생')),
            ],
            options={
                'verbose_name': '[모의고사] 05_점수',
                'verbose_name_plural': '[모의고사] 05_점수',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_0', models.IntegerField(blank=True, null=True, verbose_name='형사법')),
                ('subject_1', models.IntegerField(blank=True, null=True, verbose_name='헌법')),
                ('subject_2', models.IntegerField(blank=True, null=True, verbose_name='경찰학')),
                ('subject_3', models.IntegerField(blank=True, null=True, verbose_name='범죄학')),
                ('subject_4', models.IntegerField(blank=True, null=True, verbose_name='민법총칙')),
                ('sum', models.IntegerField(blank=True, null=True, verbose_name='총점')),
                ('participants', models.IntegerField(blank=True, null=True, verbose_name='총 인원')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rank', to='a_mock.student', verbose_name='학생')),
            ],
            options={
                'verbose_name': '[모의고사] 06_등수',
                'verbose_name_plural': '[모의고사] 06_등수',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('answer', models.IntegerField(choices=a_mock.models.abstract_models.answer_choice, default=1, verbose_name='답안')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='a_mock.problem', verbose_name='문제')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='a_mock.student', verbose_name='학생')),
            ],
            options={
                'verbose_name': '[모의고사] 03_답안',
                'verbose_name_plural': '[모의고사] 03_답안',
            },
        ),
        migrations.AddConstraint(
            model_name='problem',
            constraint=models.UniqueConstraint(fields=('exam', 'subject', 'number'), name='unique_mock_problem'),
        ),
        migrations.AddConstraint(
            model_name='statistics',
            constraint=models.UniqueConstraint(fields=('exam',), name='unique_mock_statistics'),
        ),
        migrations.AddConstraint(
            model_name='student',
            constraint=models.UniqueConstraint(fields=('exam', 'serial'), name='unique_mock_student'),
        ),
        migrations.AddConstraint(
            model_name='answer',
            constraint=models.UniqueConstraint(fields=('student', 'problem'), name='unique_mock_answer'),
        ),
    ]
